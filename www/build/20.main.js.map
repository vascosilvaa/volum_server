{"version":3,"sources":["../../src/pages/settings/profile-settings/modal-settings/modal-settings.module.ts","../../src/pages/settings/profile-settings/modal-settings/modal-settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAajD,IAAa,mBAAmB;IAAhC;IAAkC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAtB,mBAAmB;IAX/B,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sEAAa;SACd;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sEAAa,CAAC;SACxC;QACD,OAAO,EAAE;YACP,sEAAa;SACd;KACF,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACfU;AAC0D;AAEpG;;;;;GAKG;AAMH,IAAa,aAAa;IAMxB,uBAAmB,OAAsB,EAAS,SAAoB,EAAS,QAAwB,EAAS,eAAgC;QAA7H,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAE5I,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAIlD,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;YACzB,IAAI,CAAC,UAAU,GAAG,WAAW;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,sBAAsB;QAC1C,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,iCAAiC;QACrD,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,2BAA2B;QAC/C,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,aAAa;YAC/B,IAAI,CAAC,cAAc,GAAG,kCAAkC;QAC1D,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,EAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,aAAa;YAC/B,IAAI,CAAC,cAAc,GAAG,wBAAwB;QAChD,CAAC;IAEL,CAAC;IAED,sCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC9C,CAAC;IAED,+BAAO,GAAP;QACI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAED,uCAAe,GAAf;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,YAAY,EAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC;QAC3F,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAGH,oBAAC;AAAD,CAAC;AAjDY,aAAa;IALzB,uFAAS,EAAE;IACX,+EAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;kBAOgJ;AA2CjJ;SAjDY,aAAa,oB","file":"20.main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ModalSettings } from './modal-settings';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ModalSettings,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ModalSettings),\r\n  ],\r\n  exports: [\r\n    ModalSettings\r\n  ]\r\n})\r\nexport class ModalSettingsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/profile-settings/modal-settings/modal-settings.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController, ModalController} from 'ionic-angular';\r\n\r\n/**\r\n * Generated class for the ModalSettings page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-modal-settings',\r\n  templateUrl: 'modal-settings.html',\r\n})\r\nexport class ModalSettings {\r\n\r\n  public typeSettings : number\r\n  public textHeader : string;\r\n  public textHeaderList : string;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public modalController: ModalController) {\r\n      \r\n      this.typeSettings = navParams.get('typeSettings');\r\n    \r\n      \r\n\r\n      if(this.typeSettings == 0){\r\n        this.textHeader = \"Sobre mim\"\r\n      }\r\n      else if(this.typeSettings == 1){\r\n        this.textHeader = \"Hobbies e interesses\"\r\n      }\r\n      else if(this.typeSettings == 2){\r\n        this.textHeader = \"Tipos de voluntariado favoritos\"\r\n      }\r\n      else if(this.typeSettings == 3){\r\n        this.textHeader = \"Historial do voluntariado\"\r\n      }\r\n      else if(this.typeSettings == 9){\r\n        this.textHeader = \"Privacidade\"\r\n        this.textHeaderList = \"Quem pode ver a minha actividade\"\r\n      }\r\n      else if(this.typeSettings == 10){\r\n        this.textHeader = \"Privacidade\"\r\n        this.textHeaderList = \"Quem me pode contactar\"\r\n      }\r\n\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ModalSettings');\r\n  }\r\n\r\n  dismiss() {\r\n      this.viewCtrl.dismiss();\r\n  }\r\n\r\n  openModalChoose(){\r\n      const modal = this.modalController.create(\"ModalChoose\", {typeSettings:this.typeSettings});\r\n      modal.present();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/profile-settings/modal-settings/modal-settings.ts"],"sourceRoot":""}